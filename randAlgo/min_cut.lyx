#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Outline
\end_layout

\begin_layout Enumerate
Graph definitions
\end_layout

\begin_deeper
\begin_layout Enumerate
Cut and min-cut
\end_layout

\begin_layout Enumerate
Multigraph
\end_layout

\end_deeper
\begin_layout Enumerate
Randomized algorithm explained
\end_layout

\begin_deeper
\begin_layout Enumerate
Merge vertices (contraction)
\end_layout

\begin_layout Enumerate
Keep remaining vertices and edges
\end_layout

\end_deeper
\begin_layout Section
Detailed outline
\end_layout

\begin_layout Standard
I will present a randomized algorithm for finding a minimum cut of a graph
 
\begin_inset Formula $G=(V,E)$
\end_inset

.
\end_layout

\begin_layout Subsection
Terminology
\end_layout

\begin_layout Standard
The material for the proof defined a 
\series bold
cut
\series default
 in the graph 
\begin_inset Formula $G$
\end_inset

as a set of edges 
\series bold

\begin_inset Formula $C\subseteq E$
\end_inset

 
\series default
who's removal results in 
\begin_inset Formula $G$
\end_inset

 being broken down into two or more components.
\end_layout

\begin_layout Standard
A 
\series bold
min-cut 
\series default
is defined as a cut with minimum cardinality, 
\begin_inset Formula $|C|$
\end_inset

 is min(minimum number of edges)
\end_layout

\begin_layout Standard
A 
\series bold
multigraph
\series default
 is a graph where there might be multiple edges between vertices
\end_layout

\begin_layout Subsection
Randomized algorithm
\end_layout

\begin_layout Standard
The algorithm works on 
\begin_inset Formula $G$
\end_inset

 in the following way.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Randomized Min-Cut
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
while 2 vertices in 
\begin_inset Formula $G$
\end_inset

 remain and t 
\series bold

\begin_inset Formula $E\neq\emptyset$
\end_inset


\series default
:
\end_layout

\begin_deeper
\begin_layout LyX-Code
+ uniformly at random: 
\end_layout

\begin_layout LyX-Code
pick an edge merge their end points(merging two vertices)
\end_layout

\begin_layout LyX-Code
+ Any remaining edges between pairs of vertices are retained
\end_layout

\begin_layout LyX-Code
+ Edges between merged vertices are removed, 
\end_layout

\begin_layout LyX-Code
such that self-loops are removed
\end_layout

\end_deeper
\begin_layout LyX-Code
return 
\series bold

\begin_inset Formula $E$
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code

\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
Merging an edge at their end points is known as a contraction, and two vertices
 are merged, meaning the number of vertices in 
\begin_inset Formula $G$
\end_inset

decreases by one.
\end_layout

\begin_layout Subsection
Analysis
\end_layout

\begin_layout Standard

\shape italic
Does the above algorithm even return a cut of 
\begin_inset Formula $G$
\end_inset

?
\end_layout

\begin_layout Standard

\series bold
Lemma: 
\series default
Randomized Min-Cut always return a cut in 
\begin_inset Formula $G$
\end_inset


\end_layout

\begin_layout Standard

\series bold
Proof:
\end_layout

\begin_layout Standard
We proof this by induction on the number of 
\begin_inset Formula $k$
\end_inset

 iterations the algorithm is run.
 Let 
\begin_inset Formula $n=|V|$
\end_inset

, then we know that 
\begin_inset Formula $k\leq n-2$
\end_inset

, since the algorithm stops when 2 vertices remain.
 For the base case, 
\begin_inset Formula $k=0$
\end_inset

is a cut of 
\begin_inset Formula $G$
\end_inset

where the graph is partitioned into 
\begin_inset Formula $G$
\end_inset

 and the empty graph.
 Suppose that the induction hypothesis holds after 
\begin_inset Formula $k-1$
\end_inset

 iterations(the algorithm will return a cut at this point).
 The first iteration of the algorithm creates 
\begin_inset Formula $G'$
\end_inset

 by contracting an edge and removing self loops.
 Then at the 
\begin_inset Formula $k$
\end_inset

th iteration, we contract another edge and remove self-loops from 
\begin_inset Formula $G'$
\end_inset

.
 
\color red
Since the induction hypothesis hold for 
\begin_inset Formula $k-1$
\end_inset

and we remove further edges by contraction and removing self-loop, then
 we either do not split 
\begin_inset Formula $G$
\end_inset

 into further components which is still a cut, or we split 
\begin_inset Formula $G$
\end_inset

 to more components, and since some vertices might be disconnected we still
 get a cut.
 
\end_layout

\begin_layout Standard
So we know that the algorithm gives a cut, but it is not guaranteed to find
 a min-cut.
 Since the cut returned is the set of edges returned, then then a min-cut
 will be returned by the algorithm if none of the edges of the min cut are
 contracted.
 
\end_layout

\begin_layout Standard

\shape italic
Let 
\begin_inset Formula $k$
\end_inset

be the min-cut size, and let 
\begin_inset Formula $C$
\end_inset

be a particular min-cut in 
\begin_inset Formula $G$
\end_inset

 with size 
\begin_inset Formula $k=|C|$
\end_inset

, then the following theorem holds
\end_layout

\begin_layout Standard

\series bold
Theorem: 
\series default
For any min-cut 
\begin_inset Formula $C$
\end_inset

 the probability that randomized min-cut returns 
\begin_inset Formula $C$
\end_inset

is 
\begin_inset Formula $P\ge\frac{2}{n(n-1)}.$
\end_inset


\end_layout

\begin_layout Standard

\series bold
Proof:
\end_layout

\begin_layout Standard
The proof will be to bound the probability of not picking any edge in 
\begin_inset Formula $C$
\end_inset

(the min-cut), since as just argued, a min-cut is achieved when no edges
 of the min-cut are contracted by the algorithm.
 Let 
\begin_inset Formula $e_{1},e_{2},...,e_{n-2}$
\end_inset

be the edges contracted and let 
\begin_inset Formula $G_{0}=G$
\end_inset

 and 
\begin_inset Formula $G_{i}=G_{i-1}\setminus e_{i}$
\end_inset

.
 Let 
\begin_inset Formula $\varepsilon_{i}$
\end_inset

be the event that 
\begin_inset Formula $e_{i}\not\in C$
\end_inset

, that is, the contracted edge
\begin_inset Formula $e_{i}$
\end_inset

is not part of the final min-cut.
 Then we wish to find
\begin_inset Formula 
\[
\Pr(\varepsilon_{1}\cap\varepsilon_{2}\cap,...,\cap\varepsilon_{n-2})\ge\frac{2}{n(n-1)}
\]

\end_inset


\end_layout

\begin_layout Standard
We know that 
\begin_inset Formula $G_{i}=(V_{i},E_{i})$
\end_inset

 has 
\begin_inset Formula $n_{i}=n-i$
\end_inset

 vertices, since we have run the algorithm for 
\begin_inset Formula $i$
\end_inset

 iterations, and we at each iteration contract an edge thereby decreasing
 the number of vertices by 1.
 
\end_layout

\begin_layout Standard
We also know that a vertex 
\begin_inset Formula $v\in V_{i}$
\end_inset

 has degree at least 
\begin_inset Formula $d_{i}(v)\geq|C|$
\end_inset

, since a cut in 
\begin_inset Formula $G_{i}$
\end_inset

 is a cut in 
\begin_inset Formula $G$
\end_inset

 
\color red
(why?)
\color inherit
 and if we could make a cut in 
\begin_inset Formula $G_{i}$
\end_inset

that was smaller than 
\begin_inset Formula $C$
\end_inset

 it would contradict that 
\begin_inset Formula $C$
\end_inset

 was a min-cut.
 This gives us
\begin_inset Formula 
\begin{equation}
|E_{i}|=\sum_{v\in V_{i}}d_{i}(v)\geq\frac{1}{2}n_{i}|C|\label{eq:edges}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
since there are 
\begin_inset Formula $|V_{i}|=n_{i}$
\end_inset

 and 
\series bold

\begin_inset Formula $d_{i}(v)\geq|C|$
\end_inset

.
 
\series default
We multiply with a half, since there for each vertex is a edge incident
 to it and incident to another vertex (an edge goes from vertex to vertex).
 Therefore we would count each vertex twice, so we divide by 
\begin_inset Formula $2$
\end_inset

.
 This therefore gives us that
\begin_inset Formula 
\[
2|E_{i}|\geq n_{i}|C|\iff\frac{2|E_{i}|}{n_{i}}\ge|C|=k
\]

\end_inset

At the first iteration of the algorithm, there are 
\begin_inset Formula $|E|$
\end_inset

 edges and 
\begin_inset Formula $n=|V|$
\end_inset

 vertices.
 The min-cut has cardinality 
\begin_inset Formula $k=|C|$
\end_inset

 and therefore the probability of picking any edge in 
\begin_inset Formula $C$
\end_inset

at the first iteration will at most be 
\begin_inset Formula 
\[
\frac{k}{\frac{nk}{2}}=\frac{2}{n}
\]

\end_inset


\end_layout

\begin_layout Standard
Therefore we get that 
\begin_inset Formula 
\[
p_{1}=\Pr(\varepsilon_{1})\ge1-\frac{2}{n}
\]

\end_inset


\end_layout

\begin_layout Standard
since 
\begin_inset Formula $\varepsilon_{1}$
\end_inset

is the event of not picking an 
\begin_inset Formula $e\in C$
\end_inset

 at the first iteration.
 There are now 
\begin_inset Formula $n-1$
\end_inset

 vertices, since we contracted, and from 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:edges"
plural "false"
caps "false"
noprefix "false"

\end_inset

 there can now at most be 
\begin_inset Formula $\frac{(n-1)\cdot k}{2}$
\end_inset

 edges in 
\begin_inset Formula $G_{1}$
\end_inset

.
 Given that 
\begin_inset Formula $\varepsilon_{1}$
\end_inset

 happened, the probability of uniformly at random picking an edge in 
\begin_inset Formula $C$
\end_inset

 in the second iteration is now at most 
\begin_inset Formula 
\[
1-p_{2}=\Pr(\text{uniformly random }e\in E_{1}|\varepsilon_{i})\ge\frac{(n-1)k}{2}
\]

\end_inset

meaning the probability of not picking such an edge, and that 
\begin_inset Formula $\varepsilon_{2}$
\end_inset

happens is at least
\begin_inset Formula 
\[
p_{2}=\Pr(\text{uiformly random}e\in E_{1}\text{not in }C|\varepsilon_{1})\ge1-\frac{(n-1)k}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
if 
\begin_inset Formula $\varepsilon_{1},...,\varepsilon_{i}$
\end_inset

all holds, then 
\begin_inset Formula $i$
\end_inset

 vertices have been removed and we get that the probability
\end_layout

\end_body
\end_document
